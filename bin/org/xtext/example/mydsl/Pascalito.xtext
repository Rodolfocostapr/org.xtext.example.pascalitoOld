// automatically generated by Xtext
grammar org.xtext.example.mydsl.Pascalito with org.eclipse.xtext.common.Terminals

import "http://www.example.org/pascalito" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Programa returns Programa:
	'Programa'
	'{'
		'Ident' Ident=EString
		'bloco' bloco=Bloco
	'}';






Comando returns Comando:
	CallProcedimento | Atribuicao | Desvio | Loop;

Expressao returns Expressao:
	CallVariavel | Number | ExpBinLogica | ExpBin | ExpNeg;

EString returns ecore::EString:
	STRING | ID;

Bloco returns Bloco:
	{Bloco}
	'Bloco'
	'{'
		('defvariavel' '{' defvariavel+=Variavel ( "," defvariavel+=Variavel)* '}' )?
		('defprocedimento' '{' defprocedimento+=Procedimento ( "," defprocedimento+=Procedimento)* '}' )?
		('seqcomando' seqcomando=SeqComandos)?
	'}';

Variavel returns Variavel:
	{Variavel}
	'Variavel'
	'{'
		('Nome' Nome=EString)?
		('Tipo' Tipo=EString)?
		('Valor' Valor=EString)?
	'}';

Procedimento returns Procedimento:
	'Procedimento'
	'{'
		('Identificador' Identificador=EString)?
		'bloco' bloco=Bloco
		'listaparmetros' listaparmetros=ListaParmetros
	'}';

SeqComandos returns SeqComandos:
	'SeqComandos'
	'{'
		'comando' '{' comando+=Comando ( "," comando+=Comando)* '}' 
	'}';

ListaParmetros returns ListaParmetros:
	{ListaParmetros}
	'ListaParmetros'
	'{'
		('variavel' '{' variavel+=Variavel ( "," variavel+=Variavel)* '}' )?
	'}';

CallProcedimento returns CallProcedimento:
	'CallProcedimento'
	'{'
		'definido' definido=[Procedimento|EString]
		('parametro' '{' parametro+=Expressao ( "," parametro+=Expressao)* '}' )?
	'}';

Atribuicao returns Atribuicao:
	'Atribuicao'
	'{'
		'atribui' atribui=[Variavel|EString]
		'atribuiResultado' atribuiResultado=Expressao
	'}';

Desvio returns Desvio:
	'Desvio'
	'{'
		'se' se=Expressao
		'faca' faca=SeqComandos
		('seNao' seNao=SeqComandos)?
	'}';

Loop returns Loop:
	'Loop'
	'{'
		'se' se=Expressao
		'faca' faca=SeqComandos
	'}';

EBigDecimal returns ecore::EBigDecimal:
	INT? '.' INT;

CallVariavel returns CallVariavel:
	'CallVariavel'
	'{'
		('Prioridade' Prioridade=EBigDecimal)?
		'representa' representa=[Variavel|EString]
	'}';

Number returns Number:
	{Number}
	'Number'
	'{'
		('Prioridade' Prioridade=EBigDecimal)?
		('Valor' Valor=EInt)?
	'}';

ExpBinLogica returns ExpBinLogica:
	(Comutativa?='Comutativa')?
	'ExpBinLogica'
	'{'
		('Prioridade' Prioridade=EBigDecimal)?
		('Operador' Operador=EString)?
		'operandoEsq' operandoEsq=Expressao
		'operandoDir' operandoDir=Expressao
	'}';

ExpBin returns ExpBin:
	(Comutativa?='Comutativa')?
	'ExpBin'
	'{'
		('Prioridade' Prioridade=EBigDecimal)?
		('Operador' Operador=EString)?
		'operandoDir' operandoDir=Expressao
		'operandoEsq' operandoEsq=Expressao
	'}';

ExpNeg returns ExpNeg:
	'ExpNeg'
	'{'
		('Prioridade' Prioridade=EBigDecimal)?
		('Operador' Operador=EString)?
		'nega' nega=Expressao
	'}';

EInt returns ecore::EInt:
	'-'? INT;

EBoolean returns ecore::EBoolean:
	'true' | 'false';
