/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class PascalitoGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProgramaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Programa");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProgramaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdentEStringParserRuleCall_1_0 = (RuleCall)cIdentAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBlocoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlocoBlocoParserRuleCall_3_0 = (RuleCall)cBlocoAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Programa:
		//	'programa' Ident=EString
		//	'{'
		//	bloco=Bloco
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'programa' Ident=EString '{' bloco=Bloco '}'
		public Group getGroup() { return cGroup; }
		
		//'programa'
		public Keyword getProgramaKeyword_0() { return cProgramaKeyword_0; }
		
		//Ident=EString
		public Assignment getIdentAssignment_1() { return cIdentAssignment_1; }
		
		//EString
		public RuleCall getIdentEStringParserRuleCall_1_0() { return cIdentEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//bloco=Bloco
		public Assignment getBlocoAssignment_3() { return cBlocoAssignment_3; }
		
		//Bloco
		public RuleCall getBlocoBlocoParserRuleCall_3_0() { return cBlocoBlocoParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ComandoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Comando");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCallProcedimentoParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAtribuicaoParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDesvioParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cLoopParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Comando:
		//	CallProcedimento | Atribuicao | Desvio | Loop;
		@Override public ParserRule getRule() { return rule; }
		
		//CallProcedimento | Atribuicao | Desvio | Loop
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CallProcedimento
		public RuleCall getCallProcedimentoParserRuleCall_0() { return cCallProcedimentoParserRuleCall_0; }
		
		//Atribuicao
		public RuleCall getAtribuicaoParserRuleCall_1() { return cAtribuicaoParserRuleCall_1; }
		
		//Desvio
		public RuleCall getDesvioParserRuleCall_2() { return cDesvioParserRuleCall_2; }
		
		//Loop
		public RuleCall getLoopParserRuleCall_3() { return cLoopParserRuleCall_3; }
	}
	public class ExpressaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Expressao");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCallVariavelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNumberParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExpBinLogicaParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cExpBinParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cExpNegParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Expressao:
		//	CallVariavel | Number | ExpBinLogica | ExpBin | ExpNeg;
		@Override public ParserRule getRule() { return rule; }
		
		//CallVariavel | Number | ExpBinLogica | ExpBin | ExpNeg
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//CallVariavel
		public RuleCall getCallVariavelParserRuleCall_0() { return cCallVariavelParserRuleCall_0; }
		
		//Number
		public RuleCall getNumberParserRuleCall_1() { return cNumberParserRuleCall_1; }
		
		//ExpBinLogica
		public RuleCall getExpBinLogicaParserRuleCall_2() { return cExpBinLogicaParserRuleCall_2; }
		
		//ExpBin
		public RuleCall getExpBinParserRuleCall_3() { return cExpBinParserRuleCall_3; }
		
		//ExpNeg
		public RuleCall getExpNegParserRuleCall_4() { return cExpNegParserRuleCall_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class BlocoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Bloco");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBlocoAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cVarKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cDefvariavelAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cDefvariavelVariavelParserRuleCall_1_1_0 = (RuleCall)cDefvariavelAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cDefvariavelAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cDefvariavelVariavelParserRuleCall_1_2_1_0 = (RuleCall)cDefvariavelAssignment_1_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cProcedimentoKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefprocedimentoAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefprocedimentoProcedimentoParserRuleCall_2_1_0 = (RuleCall)cDefprocedimentoAssignment_2_1.eContents().get(0);
		
		//Bloco:
		//	{Bloco} ('var' defvariavel+=Variavel ("," defvariavel+=Variavel)* ";")* ('procedimento'
		//	defprocedimento+=Procedimento)*
		//	//('seqcomando' seqcomando=SeqComandos)? COMENTADO APENAS PARA FAZER OS TESTES
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Bloco} ('var' defvariavel+=Variavel ("," defvariavel+=Variavel)* ";")* ('procedimento' defprocedimento+=Procedimento)*
		public Group getGroup() { return cGroup; }
		
		//{Bloco}
		public Action getBlocoAction_0() { return cBlocoAction_0; }
		
		//('var' defvariavel+=Variavel ("," defvariavel+=Variavel)* ";")*
		public Group getGroup_1() { return cGroup_1; }
		
		//'var'
		public Keyword getVarKeyword_1_0() { return cVarKeyword_1_0; }
		
		//defvariavel+=Variavel
		public Assignment getDefvariavelAssignment_1_1() { return cDefvariavelAssignment_1_1; }
		
		//Variavel
		public RuleCall getDefvariavelVariavelParserRuleCall_1_1_0() { return cDefvariavelVariavelParserRuleCall_1_1_0; }
		
		//("," defvariavel+=Variavel)*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//defvariavel+=Variavel
		public Assignment getDefvariavelAssignment_1_2_1() { return cDefvariavelAssignment_1_2_1; }
		
		//Variavel
		public RuleCall getDefvariavelVariavelParserRuleCall_1_2_1_0() { return cDefvariavelVariavelParserRuleCall_1_2_1_0; }
		
		//";"
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
		
		//('procedimento' defprocedimento+=Procedimento)*
		public Group getGroup_2() { return cGroup_2; }
		
		//'procedimento'
		public Keyword getProcedimentoKeyword_2_0() { return cProcedimentoKeyword_2_0; }
		
		//defprocedimento+=Procedimento
		public Assignment getDefprocedimentoAssignment_2_1() { return cDefprocedimentoAssignment_2_1; }
		
		//Procedimento
		public RuleCall getDefprocedimentoProcedimentoParserRuleCall_2_1_0() { return cDefprocedimentoProcedimentoParserRuleCall_2_1_0; }
	}
	public class VariavelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Variavel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariavelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNomeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNomeEStringParserRuleCall_1_0 = (RuleCall)cNomeAssignment_1.eContents().get(0);
		
		//Variavel:
		//	{Variavel} Nome=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Variavel} Nome=EString
		public Group getGroup() { return cGroup; }
		
		//{Variavel}
		public Action getVariavelAction_0() { return cVariavelAction_0; }
		
		//Nome=EString
		public Assignment getNomeAssignment_1() { return cNomeAssignment_1; }
		
		//EString
		public RuleCall getNomeEStringParserRuleCall_1_0() { return cNomeEStringParserRuleCall_1_0; }
	}
	public class ProcedimentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Procedimento");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cIdentificadorAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cIdentificadorEStringParserRuleCall_0_0_0 = (RuleCall)cIdentificadorAssignment_0_0.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cListaparmetrosAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cListaparmetrosListaParmetrosParserRuleCall_0_2_0 = (RuleCall)cListaparmetrosAssignment_0_2.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBlocoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlocoBlocoParserRuleCall_2_0 = (RuleCall)cBlocoAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Procedimento:
		//	(Identificador=EString "(" listaparmetros=ListaParmetros ")")
		//	"{" bloco=Bloco "}";
		@Override public ParserRule getRule() { return rule; }
		
		//(Identificador=EString "(" listaparmetros=ListaParmetros ")") "{" bloco=Bloco "}"
		public Group getGroup() { return cGroup; }
		
		//(Identificador=EString "(" listaparmetros=ListaParmetros ")")
		public Group getGroup_0() { return cGroup_0; }
		
		//Identificador=EString
		public Assignment getIdentificadorAssignment_0_0() { return cIdentificadorAssignment_0_0; }
		
		//EString
		public RuleCall getIdentificadorEStringParserRuleCall_0_0_0() { return cIdentificadorEStringParserRuleCall_0_0_0; }
		
		//"("
		public Keyword getLeftParenthesisKeyword_0_1() { return cLeftParenthesisKeyword_0_1; }
		
		//listaparmetros=ListaParmetros
		public Assignment getListaparmetrosAssignment_0_2() { return cListaparmetrosAssignment_0_2; }
		
		//ListaParmetros
		public RuleCall getListaparmetrosListaParmetrosParserRuleCall_0_2_0() { return cListaparmetrosListaParmetrosParserRuleCall_0_2_0; }
		
		//")"
		public Keyword getRightParenthesisKeyword_0_3() { return cRightParenthesisKeyword_0_3; }
		
		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//bloco=Bloco
		public Assignment getBlocoAssignment_2() { return cBlocoAssignment_2; }
		
		//Bloco
		public RuleCall getBlocoBlocoParserRuleCall_2_0() { return cBlocoBlocoParserRuleCall_2_0; }
		
		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class SeqComandosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.SeqComandos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeqComandosKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cComandoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cComandoAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cComandoComandoParserRuleCall_4_0 = (RuleCall)cComandoAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cComandoAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cComandoComandoParserRuleCall_5_1_0 = (RuleCall)cComandoAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//SeqComandos:
		//	'SeqComandos'
		//	'{'
		//	'comando' '{' comando+=Comando ("," comando+=Comando)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SeqComandos' '{' 'comando' '{' comando+=Comando ("," comando+=Comando)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'SeqComandos'
		public Keyword getSeqComandosKeyword_0() { return cSeqComandosKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'comando'
		public Keyword getComandoKeyword_2() { return cComandoKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//comando+=Comando
		public Assignment getComandoAssignment_4() { return cComandoAssignment_4; }
		
		//Comando
		public RuleCall getComandoComandoParserRuleCall_4_0() { return cComandoComandoParserRuleCall_4_0; }
		
		//("," comando+=Comando)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//comando+=Comando
		public Assignment getComandoAssignment_5_1() { return cComandoAssignment_5_1; }
		
		//Comando
		public RuleCall getComandoComandoParserRuleCall_5_1_0() { return cComandoComandoParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ListaParmetrosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.ListaParmetros");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListaParmetrosAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cVariavelAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cVariavelVariavelParserRuleCall_1_0_0 = (RuleCall)cVariavelAssignment_1_0.eContents().get(0);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cCommaKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Assignment cVariavelAssignment_1_1_1 = (Assignment)cGroup_1_1.eContents().get(1);
		private final RuleCall cVariavelVariavelParserRuleCall_1_1_1_0 = (RuleCall)cVariavelAssignment_1_1_1.eContents().get(0);
		
		//ListaParmetros:
		//	{ListaParmetros} (variavel+=Variavel ("," variavel+=Variavel)*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ListaParmetros} (variavel+=Variavel ("," variavel+=Variavel)*)?
		public Group getGroup() { return cGroup; }
		
		//{ListaParmetros}
		public Action getListaParmetrosAction_0() { return cListaParmetrosAction_0; }
		
		//(variavel+=Variavel ("," variavel+=Variavel)*)?
		public Group getGroup_1() { return cGroup_1; }
		
		//variavel+=Variavel
		public Assignment getVariavelAssignment_1_0() { return cVariavelAssignment_1_0; }
		
		//Variavel
		public RuleCall getVariavelVariavelParserRuleCall_1_0_0() { return cVariavelVariavelParserRuleCall_1_0_0; }
		
		//("," variavel+=Variavel)*
		public Group getGroup_1_1() { return cGroup_1_1; }
		
		//","
		public Keyword getCommaKeyword_1_1_0() { return cCommaKeyword_1_1_0; }
		
		//variavel+=Variavel
		public Assignment getVariavelAssignment_1_1_1() { return cVariavelAssignment_1_1_1; }
		
		//Variavel
		public RuleCall getVariavelVariavelParserRuleCall_1_1_1_0() { return cVariavelVariavelParserRuleCall_1_1_1_0; }
	}
	public class CallProcedimentoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.CallProcedimento");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallProcedimentoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cDefinidoKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDefinidoAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cDefinidoProcedimentoCrossReference_3_0 = (CrossReference)cDefinidoAssignment_3.eContents().get(0);
		private final RuleCall cDefinidoProcedimentoEStringParserRuleCall_3_0_1 = (RuleCall)cDefinidoProcedimentoCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cParametroKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cParametroAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cParametroExpressaoParserRuleCall_4_2_0 = (RuleCall)cParametroAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cParametroAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cParametroExpressaoParserRuleCall_4_3_1_0 = (RuleCall)cParametroAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CallProcedimento:
		//	'CallProcedimento'
		//	'{'
		//	'definido' definido=[Procedimento|EString] ('parametro' '{' parametro+=Expressao ("," parametro+=Expressao)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CallProcedimento' '{' 'definido' definido=[Procedimento|EString] ('parametro' '{' parametro+=Expressao (","
		//parametro+=Expressao)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'CallProcedimento'
		public Keyword getCallProcedimentoKeyword_0() { return cCallProcedimentoKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'definido'
		public Keyword getDefinidoKeyword_2() { return cDefinidoKeyword_2; }
		
		//definido=[Procedimento|EString]
		public Assignment getDefinidoAssignment_3() { return cDefinidoAssignment_3; }
		
		//[Procedimento|EString]
		public CrossReference getDefinidoProcedimentoCrossReference_3_0() { return cDefinidoProcedimentoCrossReference_3_0; }
		
		//EString
		public RuleCall getDefinidoProcedimentoEStringParserRuleCall_3_0_1() { return cDefinidoProcedimentoEStringParserRuleCall_3_0_1; }
		
		//('parametro' '{' parametro+=Expressao ("," parametro+=Expressao)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'parametro'
		public Keyword getParametroKeyword_4_0() { return cParametroKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//parametro+=Expressao
		public Assignment getParametroAssignment_4_2() { return cParametroAssignment_4_2; }
		
		//Expressao
		public RuleCall getParametroExpressaoParserRuleCall_4_2_0() { return cParametroExpressaoParserRuleCall_4_2_0; }
		
		//("," parametro+=Expressao)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//parametro+=Expressao
		public Assignment getParametroAssignment_4_3_1() { return cParametroAssignment_4_3_1; }
		
		//Expressao
		public RuleCall getParametroExpressaoParserRuleCall_4_3_1_0() { return cParametroExpressaoParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AtribuicaoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Atribuicao");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAtribuicaoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAtribuiKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAtribuiAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAtribuiVariavelCrossReference_3_0 = (CrossReference)cAtribuiAssignment_3.eContents().get(0);
		private final RuleCall cAtribuiVariavelEStringParserRuleCall_3_0_1 = (RuleCall)cAtribuiVariavelCrossReference_3_0.eContents().get(1);
		private final Keyword cAtribuiResultadoKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAtribuiResultadoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAtribuiResultadoExpressaoParserRuleCall_5_0 = (RuleCall)cAtribuiResultadoAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Atribuicao:
		//	'Atribuicao'
		//	'{'
		//	'atribui' atribui=[Variavel|EString]
		//	'atribuiResultado' atribuiResultado=Expressao
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Atribuicao' '{' 'atribui' atribui=[Variavel|EString] 'atribuiResultado' atribuiResultado=Expressao '}'
		public Group getGroup() { return cGroup; }
		
		//'Atribuicao'
		public Keyword getAtribuicaoKeyword_0() { return cAtribuicaoKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'atribui'
		public Keyword getAtribuiKeyword_2() { return cAtribuiKeyword_2; }
		
		//atribui=[Variavel|EString]
		public Assignment getAtribuiAssignment_3() { return cAtribuiAssignment_3; }
		
		//[Variavel|EString]
		public CrossReference getAtribuiVariavelCrossReference_3_0() { return cAtribuiVariavelCrossReference_3_0; }
		
		//EString
		public RuleCall getAtribuiVariavelEStringParserRuleCall_3_0_1() { return cAtribuiVariavelEStringParserRuleCall_3_0_1; }
		
		//'atribuiResultado'
		public Keyword getAtribuiResultadoKeyword_4() { return cAtribuiResultadoKeyword_4; }
		
		//atribuiResultado=Expressao
		public Assignment getAtribuiResultadoAssignment_5() { return cAtribuiResultadoAssignment_5; }
		
		//Expressao
		public RuleCall getAtribuiResultadoExpressaoParserRuleCall_5_0() { return cAtribuiResultadoExpressaoParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DesvioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Desvio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDesvioKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSeExpressaoParserRuleCall_3_0 = (RuleCall)cSeAssignment_3.eContents().get(0);
		private final Keyword cFacaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFacaAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFacaSeqComandosParserRuleCall_5_0 = (RuleCall)cFacaAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cSeNaoKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cSeNaoAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cSeNaoSeqComandosParserRuleCall_6_1_0 = (RuleCall)cSeNaoAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Desvio:
		//	'Desvio'
		//	'{'
		//	'se' se=Expressao
		//	'faca' faca=SeqComandos ('seNao' seNao=SeqComandos)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Desvio' '{' 'se' se=Expressao 'faca' faca=SeqComandos ('seNao' seNao=SeqComandos)? '}'
		public Group getGroup() { return cGroup; }
		
		//'Desvio'
		public Keyword getDesvioKeyword_0() { return cDesvioKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'se'
		public Keyword getSeKeyword_2() { return cSeKeyword_2; }
		
		//se=Expressao
		public Assignment getSeAssignment_3() { return cSeAssignment_3; }
		
		//Expressao
		public RuleCall getSeExpressaoParserRuleCall_3_0() { return cSeExpressaoParserRuleCall_3_0; }
		
		//'faca'
		public Keyword getFacaKeyword_4() { return cFacaKeyword_4; }
		
		//faca=SeqComandos
		public Assignment getFacaAssignment_5() { return cFacaAssignment_5; }
		
		//SeqComandos
		public RuleCall getFacaSeqComandosParserRuleCall_5_0() { return cFacaSeqComandosParserRuleCall_5_0; }
		
		//('seNao' seNao=SeqComandos)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'seNao'
		public Keyword getSeNaoKeyword_6_0() { return cSeNaoKeyword_6_0; }
		
		//seNao=SeqComandos
		public Assignment getSeNaoAssignment_6_1() { return cSeNaoAssignment_6_1; }
		
		//SeqComandos
		public RuleCall getSeNaoSeqComandosParserRuleCall_6_1_0() { return cSeNaoSeqComandosParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoopKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSeExpressaoParserRuleCall_3_0 = (RuleCall)cSeAssignment_3.eContents().get(0);
		private final Keyword cFacaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFacaAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cFacaSeqComandosParserRuleCall_5_0 = (RuleCall)cFacaAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Loop:
		//	'Loop'
		//	'{'
		//	'se' se=Expressao
		//	'faca' faca=SeqComandos
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Loop' '{' 'se' se=Expressao 'faca' faca=SeqComandos '}'
		public Group getGroup() { return cGroup; }
		
		//'Loop'
		public Keyword getLoopKeyword_0() { return cLoopKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'se'
		public Keyword getSeKeyword_2() { return cSeKeyword_2; }
		
		//se=Expressao
		public Assignment getSeAssignment_3() { return cSeAssignment_3; }
		
		//Expressao
		public RuleCall getSeExpressaoParserRuleCall_3_0() { return cSeExpressaoParserRuleCall_3_0; }
		
		//'faca'
		public Keyword getFacaKeyword_4() { return cFacaKeyword_4; }
		
		//faca=SeqComandos
		public Assignment getFacaAssignment_5() { return cFacaAssignment_5; }
		
		//SeqComandos
		public RuleCall getFacaSeqComandosParserRuleCall_5_0() { return cFacaSeqComandosParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EBigDecimalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.EBigDecimal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//EBigDecimal ecore::EBigDecimal:
		//	INT? '.' INT
		@Override public ParserRule getRule() { return rule; }
		
		//INT? '.' INT
		public Group getGroup() { return cGroup; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }
		
		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	public class CallVariavelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.CallVariavel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCallVariavelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPrioridadeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPrioridadeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPrioridadeEBigDecimalParserRuleCall_2_1_0 = (RuleCall)cPrioridadeAssignment_2_1.eContents().get(0);
		private final Keyword cRepresentaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRepresentaAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRepresentaVariavelCrossReference_4_0 = (CrossReference)cRepresentaAssignment_4.eContents().get(0);
		private final RuleCall cRepresentaVariavelEStringParserRuleCall_4_0_1 = (RuleCall)cRepresentaVariavelCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CallVariavel:
		//	'CallVariavel'
		//	'{' ('Prioridade' Prioridade=EBigDecimal)?
		//	'representa' representa=[Variavel|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CallVariavel' '{' ('Prioridade' Prioridade=EBigDecimal)? 'representa' representa=[Variavel|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'CallVariavel'
		public Keyword getCallVariavelKeyword_0() { return cCallVariavelKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('Prioridade' Prioridade=EBigDecimal)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Prioridade'
		public Keyword getPrioridadeKeyword_2_0() { return cPrioridadeKeyword_2_0; }
		
		//Prioridade=EBigDecimal
		public Assignment getPrioridadeAssignment_2_1() { return cPrioridadeAssignment_2_1; }
		
		//EBigDecimal
		public RuleCall getPrioridadeEBigDecimalParserRuleCall_2_1_0() { return cPrioridadeEBigDecimalParserRuleCall_2_1_0; }
		
		//'representa'
		public Keyword getRepresentaKeyword_3() { return cRepresentaKeyword_3; }
		
		//representa=[Variavel|EString]
		public Assignment getRepresentaAssignment_4() { return cRepresentaAssignment_4; }
		
		//[Variavel|EString]
		public CrossReference getRepresentaVariavelCrossReference_4_0() { return cRepresentaVariavelCrossReference_4_0; }
		
		//EString
		public RuleCall getRepresentaVariavelEStringParserRuleCall_4_0_1() { return cRepresentaVariavelEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.Number");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNumberAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNumberKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPrioridadeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrioridadeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPrioridadeEBigDecimalParserRuleCall_3_1_0 = (RuleCall)cPrioridadeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValorEIntParserRuleCall_4_1_0 = (RuleCall)cValorAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Number:
		//	{Number}
		//	'Number'
		//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Valor' Valor=EInt)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Number} 'Number' '{' ('Prioridade' Prioridade=EBigDecimal)? ('Valor' Valor=EInt)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Number}
		public Action getNumberAction_0() { return cNumberAction_0; }
		
		//'Number'
		public Keyword getNumberKeyword_1() { return cNumberKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Prioridade' Prioridade=EBigDecimal)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Prioridade'
		public Keyword getPrioridadeKeyword_3_0() { return cPrioridadeKeyword_3_0; }
		
		//Prioridade=EBigDecimal
		public Assignment getPrioridadeAssignment_3_1() { return cPrioridadeAssignment_3_1; }
		
		//EBigDecimal
		public RuleCall getPrioridadeEBigDecimalParserRuleCall_3_1_0() { return cPrioridadeEBigDecimalParserRuleCall_3_1_0; }
		
		//('Valor' Valor=EInt)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Valor'
		public Keyword getValorKeyword_4_0() { return cValorKeyword_4_0; }
		
		//Valor=EInt
		public Assignment getValorAssignment_4_1() { return cValorAssignment_4_1; }
		
		//EInt
		public RuleCall getValorEIntParserRuleCall_4_1_0() { return cValorEIntParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ExpBinLogicaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.ExpBinLogica");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComutativaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cComutativaComutativaKeyword_0_0 = (Keyword)cComutativaAssignment_0.eContents().get(0);
		private final Keyword cExpBinLogicaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPrioridadeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrioridadeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPrioridadeEBigDecimalParserRuleCall_3_1_0 = (RuleCall)cPrioridadeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOperadorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperadorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperadorEStringParserRuleCall_4_1_0 = (RuleCall)cOperadorAssignment_4_1.eContents().get(0);
		private final Keyword cOperandoEsqKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOperandoEsqAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOperandoEsqExpressaoParserRuleCall_6_0 = (RuleCall)cOperandoEsqAssignment_6.eContents().get(0);
		private final Keyword cOperandoDirKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOperandoDirAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOperandoDirExpressaoParserRuleCall_8_0 = (RuleCall)cOperandoDirAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ExpBinLogica:
		//	Comutativa?='Comutativa'?
		//	'ExpBinLogica'
		//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
		//	'operandoEsq' operandoEsq=Expressao
		//	'operandoDir' operandoDir=Expressao
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//Comutativa?='Comutativa'? 'ExpBinLogica' '{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
		//'operandoEsq' operandoEsq=Expressao 'operandoDir' operandoDir=Expressao '}'
		public Group getGroup() { return cGroup; }
		
		//Comutativa?='Comutativa'?
		public Assignment getComutativaAssignment_0() { return cComutativaAssignment_0; }
		
		//'Comutativa'
		public Keyword getComutativaComutativaKeyword_0_0() { return cComutativaComutativaKeyword_0_0; }
		
		//'ExpBinLogica'
		public Keyword getExpBinLogicaKeyword_1() { return cExpBinLogicaKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Prioridade' Prioridade=EBigDecimal)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Prioridade'
		public Keyword getPrioridadeKeyword_3_0() { return cPrioridadeKeyword_3_0; }
		
		//Prioridade=EBigDecimal
		public Assignment getPrioridadeAssignment_3_1() { return cPrioridadeAssignment_3_1; }
		
		//EBigDecimal
		public RuleCall getPrioridadeEBigDecimalParserRuleCall_3_1_0() { return cPrioridadeEBigDecimalParserRuleCall_3_1_0; }
		
		//('Operador' Operador=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Operador'
		public Keyword getOperadorKeyword_4_0() { return cOperadorKeyword_4_0; }
		
		//Operador=EString
		public Assignment getOperadorAssignment_4_1() { return cOperadorAssignment_4_1; }
		
		//EString
		public RuleCall getOperadorEStringParserRuleCall_4_1_0() { return cOperadorEStringParserRuleCall_4_1_0; }
		
		//'operandoEsq'
		public Keyword getOperandoEsqKeyword_5() { return cOperandoEsqKeyword_5; }
		
		//operandoEsq=Expressao
		public Assignment getOperandoEsqAssignment_6() { return cOperandoEsqAssignment_6; }
		
		//Expressao
		public RuleCall getOperandoEsqExpressaoParserRuleCall_6_0() { return cOperandoEsqExpressaoParserRuleCall_6_0; }
		
		//'operandoDir'
		public Keyword getOperandoDirKeyword_7() { return cOperandoDirKeyword_7; }
		
		//operandoDir=Expressao
		public Assignment getOperandoDirAssignment_8() { return cOperandoDirAssignment_8; }
		
		//Expressao
		public RuleCall getOperandoDirExpressaoParserRuleCall_8_0() { return cOperandoDirExpressaoParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ExpBinElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.ExpBin");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cComutativaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cComutativaComutativaKeyword_0_0 = (Keyword)cComutativaAssignment_0.eContents().get(0);
		private final Keyword cExpBinKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPrioridadeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrioridadeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPrioridadeEBigDecimalParserRuleCall_3_1_0 = (RuleCall)cPrioridadeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOperadorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOperadorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOperadorEStringParserRuleCall_4_1_0 = (RuleCall)cOperadorAssignment_4_1.eContents().get(0);
		private final Keyword cOperandoDirKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOperandoDirAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOperandoDirExpressaoParserRuleCall_6_0 = (RuleCall)cOperandoDirAssignment_6.eContents().get(0);
		private final Keyword cOperandoEsqKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cOperandoEsqAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cOperandoEsqExpressaoParserRuleCall_8_0 = (RuleCall)cOperandoEsqAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ExpBin:
		//	Comutativa?='Comutativa'?
		//	'ExpBin'
		//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
		//	'operandoDir' operandoDir=Expressao
		//	'operandoEsq' operandoEsq=Expressao
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//Comutativa?='Comutativa'? 'ExpBin' '{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
		//'operandoDir' operandoDir=Expressao 'operandoEsq' operandoEsq=Expressao '}'
		public Group getGroup() { return cGroup; }
		
		//Comutativa?='Comutativa'?
		public Assignment getComutativaAssignment_0() { return cComutativaAssignment_0; }
		
		//'Comutativa'
		public Keyword getComutativaComutativaKeyword_0_0() { return cComutativaComutativaKeyword_0_0; }
		
		//'ExpBin'
		public Keyword getExpBinKeyword_1() { return cExpBinKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('Prioridade' Prioridade=EBigDecimal)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Prioridade'
		public Keyword getPrioridadeKeyword_3_0() { return cPrioridadeKeyword_3_0; }
		
		//Prioridade=EBigDecimal
		public Assignment getPrioridadeAssignment_3_1() { return cPrioridadeAssignment_3_1; }
		
		//EBigDecimal
		public RuleCall getPrioridadeEBigDecimalParserRuleCall_3_1_0() { return cPrioridadeEBigDecimalParserRuleCall_3_1_0; }
		
		//('Operador' Operador=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'Operador'
		public Keyword getOperadorKeyword_4_0() { return cOperadorKeyword_4_0; }
		
		//Operador=EString
		public Assignment getOperadorAssignment_4_1() { return cOperadorAssignment_4_1; }
		
		//EString
		public RuleCall getOperadorEStringParserRuleCall_4_1_0() { return cOperadorEStringParserRuleCall_4_1_0; }
		
		//'operandoDir'
		public Keyword getOperandoDirKeyword_5() { return cOperandoDirKeyword_5; }
		
		//operandoDir=Expressao
		public Assignment getOperandoDirAssignment_6() { return cOperandoDirAssignment_6; }
		
		//Expressao
		public RuleCall getOperandoDirExpressaoParserRuleCall_6_0() { return cOperandoDirExpressaoParserRuleCall_6_0; }
		
		//'operandoEsq'
		public Keyword getOperandoEsqKeyword_7() { return cOperandoEsqKeyword_7; }
		
		//operandoEsq=Expressao
		public Assignment getOperandoEsqAssignment_8() { return cOperandoEsqAssignment_8; }
		
		//Expressao
		public RuleCall getOperandoEsqExpressaoParserRuleCall_8_0() { return cOperandoEsqExpressaoParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class ExpNegElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.ExpNeg");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExpNegKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cPrioridadeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cPrioridadeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cPrioridadeEBigDecimalParserRuleCall_2_1_0 = (RuleCall)cPrioridadeAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOperadorKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cOperadorAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cOperadorEStringParserRuleCall_3_1_0 = (RuleCall)cOperadorAssignment_3_1.eContents().get(0);
		private final Keyword cNegaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNegaAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNegaExpressaoParserRuleCall_5_0 = (RuleCall)cNegaAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExpNeg:
		//	'ExpNeg'
		//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
		//	'nega' nega=Expressao
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ExpNeg' '{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)? 'nega' nega=Expressao '}'
		public Group getGroup() { return cGroup; }
		
		//'ExpNeg'
		public Keyword getExpNegKeyword_0() { return cExpNegKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('Prioridade' Prioridade=EBigDecimal)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'Prioridade'
		public Keyword getPrioridadeKeyword_2_0() { return cPrioridadeKeyword_2_0; }
		
		//Prioridade=EBigDecimal
		public Assignment getPrioridadeAssignment_2_1() { return cPrioridadeAssignment_2_1; }
		
		//EBigDecimal
		public RuleCall getPrioridadeEBigDecimalParserRuleCall_2_1_0() { return cPrioridadeEBigDecimalParserRuleCall_2_1_0; }
		
		//('Operador' Operador=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'Operador'
		public Keyword getOperadorKeyword_3_0() { return cOperadorKeyword_3_0; }
		
		//Operador=EString
		public Assignment getOperadorAssignment_3_1() { return cOperadorAssignment_3_1; }
		
		//EString
		public RuleCall getOperadorEStringParserRuleCall_3_1_0() { return cOperadorEStringParserRuleCall_3_1_0; }
		
		//'nega'
		public Keyword getNegaKeyword_4() { return cNegaKeyword_4; }
		
		//nega=Expressao
		public Assignment getNegaAssignment_5() { return cNegaAssignment_5; }
		
		//Expressao
		public RuleCall getNegaExpressaoParserRuleCall_5_0() { return cNegaExpressaoParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.Pascalito.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false'
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	
	
	private final ProgramaElements pPrograma;
	private final ComandoElements pComando;
	private final ExpressaoElements pExpressao;
	private final EStringElements pEString;
	private final BlocoElements pBloco;
	private final VariavelElements pVariavel;
	private final ProcedimentoElements pProcedimento;
	private final SeqComandosElements pSeqComandos;
	private final ListaParmetrosElements pListaParmetros;
	private final CallProcedimentoElements pCallProcedimento;
	private final AtribuicaoElements pAtribuicao;
	private final DesvioElements pDesvio;
	private final LoopElements pLoop;
	private final EBigDecimalElements pEBigDecimal;
	private final CallVariavelElements pCallVariavel;
	private final NumberElements pNumber;
	private final ExpBinLogicaElements pExpBinLogica;
	private final ExpBinElements pExpBin;
	private final ExpNegElements pExpNeg;
	private final EIntElements pEInt;
	private final EBooleanElements pEBoolean;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public PascalitoGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPrograma = new ProgramaElements();
		this.pComando = new ComandoElements();
		this.pExpressao = new ExpressaoElements();
		this.pEString = new EStringElements();
		this.pBloco = new BlocoElements();
		this.pVariavel = new VariavelElements();
		this.pProcedimento = new ProcedimentoElements();
		this.pSeqComandos = new SeqComandosElements();
		this.pListaParmetros = new ListaParmetrosElements();
		this.pCallProcedimento = new CallProcedimentoElements();
		this.pAtribuicao = new AtribuicaoElements();
		this.pDesvio = new DesvioElements();
		this.pLoop = new LoopElements();
		this.pEBigDecimal = new EBigDecimalElements();
		this.pCallVariavel = new CallVariavelElements();
		this.pNumber = new NumberElements();
		this.pExpBinLogica = new ExpBinLogicaElements();
		this.pExpBin = new ExpBinElements();
		this.pExpNeg = new ExpNegElements();
		this.pEInt = new EIntElements();
		this.pEBoolean = new EBooleanElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.Pascalito".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Programa:
	//	'programa' Ident=EString
	//	'{'
	//	bloco=Bloco
	//	'}';
	public ProgramaElements getProgramaAccess() {
		return pPrograma;
	}
	
	public ParserRule getProgramaRule() {
		return getProgramaAccess().getRule();
	}
	
	//Comando:
	//	CallProcedimento | Atribuicao | Desvio | Loop;
	public ComandoElements getComandoAccess() {
		return pComando;
	}
	
	public ParserRule getComandoRule() {
		return getComandoAccess().getRule();
	}
	
	//Expressao:
	//	CallVariavel | Number | ExpBinLogica | ExpBin | ExpNeg;
	public ExpressaoElements getExpressaoAccess() {
		return pExpressao;
	}
	
	public ParserRule getExpressaoRule() {
		return getExpressaoAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Bloco:
	//	{Bloco} ('var' defvariavel+=Variavel ("," defvariavel+=Variavel)* ";")* ('procedimento'
	//	defprocedimento+=Procedimento)*
	//	//('seqcomando' seqcomando=SeqComandos)? COMENTADO APENAS PARA FAZER OS TESTES
	//;
	public BlocoElements getBlocoAccess() {
		return pBloco;
	}
	
	public ParserRule getBlocoRule() {
		return getBlocoAccess().getRule();
	}
	
	//Variavel:
	//	{Variavel} Nome=EString;
	public VariavelElements getVariavelAccess() {
		return pVariavel;
	}
	
	public ParserRule getVariavelRule() {
		return getVariavelAccess().getRule();
	}
	
	//Procedimento:
	//	(Identificador=EString "(" listaparmetros=ListaParmetros ")")
	//	"{" bloco=Bloco "}";
	public ProcedimentoElements getProcedimentoAccess() {
		return pProcedimento;
	}
	
	public ParserRule getProcedimentoRule() {
		return getProcedimentoAccess().getRule();
	}
	
	//SeqComandos:
	//	'SeqComandos'
	//	'{'
	//	'comando' '{' comando+=Comando ("," comando+=Comando)* '}'
	//	'}';
	public SeqComandosElements getSeqComandosAccess() {
		return pSeqComandos;
	}
	
	public ParserRule getSeqComandosRule() {
		return getSeqComandosAccess().getRule();
	}
	
	//ListaParmetros:
	//	{ListaParmetros} (variavel+=Variavel ("," variavel+=Variavel)*)?;
	public ListaParmetrosElements getListaParmetrosAccess() {
		return pListaParmetros;
	}
	
	public ParserRule getListaParmetrosRule() {
		return getListaParmetrosAccess().getRule();
	}
	
	//CallProcedimento:
	//	'CallProcedimento'
	//	'{'
	//	'definido' definido=[Procedimento|EString] ('parametro' '{' parametro+=Expressao ("," parametro+=Expressao)* '}')?
	//	'}';
	public CallProcedimentoElements getCallProcedimentoAccess() {
		return pCallProcedimento;
	}
	
	public ParserRule getCallProcedimentoRule() {
		return getCallProcedimentoAccess().getRule();
	}
	
	//Atribuicao:
	//	'Atribuicao'
	//	'{'
	//	'atribui' atribui=[Variavel|EString]
	//	'atribuiResultado' atribuiResultado=Expressao
	//	'}';
	public AtribuicaoElements getAtribuicaoAccess() {
		return pAtribuicao;
	}
	
	public ParserRule getAtribuicaoRule() {
		return getAtribuicaoAccess().getRule();
	}
	
	//Desvio:
	//	'Desvio'
	//	'{'
	//	'se' se=Expressao
	//	'faca' faca=SeqComandos ('seNao' seNao=SeqComandos)?
	//	'}';
	public DesvioElements getDesvioAccess() {
		return pDesvio;
	}
	
	public ParserRule getDesvioRule() {
		return getDesvioAccess().getRule();
	}
	
	//Loop:
	//	'Loop'
	//	'{'
	//	'se' se=Expressao
	//	'faca' faca=SeqComandos
	//	'}';
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//EBigDecimal ecore::EBigDecimal:
	//	INT? '.' INT
	public EBigDecimalElements getEBigDecimalAccess() {
		return pEBigDecimal;
	}
	
	public ParserRule getEBigDecimalRule() {
		return getEBigDecimalAccess().getRule();
	}
	
	//CallVariavel:
	//	'CallVariavel'
	//	'{' ('Prioridade' Prioridade=EBigDecimal)?
	//	'representa' representa=[Variavel|EString]
	//	'}';
	public CallVariavelElements getCallVariavelAccess() {
		return pCallVariavel;
	}
	
	public ParserRule getCallVariavelRule() {
		return getCallVariavelAccess().getRule();
	}
	
	//Number:
	//	{Number}
	//	'Number'
	//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Valor' Valor=EInt)?
	//	'}';
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}
	
	//ExpBinLogica:
	//	Comutativa?='Comutativa'?
	//	'ExpBinLogica'
	//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
	//	'operandoEsq' operandoEsq=Expressao
	//	'operandoDir' operandoDir=Expressao
	//	'}';
	public ExpBinLogicaElements getExpBinLogicaAccess() {
		return pExpBinLogica;
	}
	
	public ParserRule getExpBinLogicaRule() {
		return getExpBinLogicaAccess().getRule();
	}
	
	//ExpBin:
	//	Comutativa?='Comutativa'?
	//	'ExpBin'
	//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
	//	'operandoDir' operandoDir=Expressao
	//	'operandoEsq' operandoEsq=Expressao
	//	'}';
	public ExpBinElements getExpBinAccess() {
		return pExpBin;
	}
	
	public ParserRule getExpBinRule() {
		return getExpBinAccess().getRule();
	}
	
	//ExpNeg:
	//	'ExpNeg'
	//	'{' ('Prioridade' Prioridade=EBigDecimal)? ('Operador' Operador=EString)?
	//	'nega' nega=Expressao
	//	'}';
	public ExpNegElements getExpNegAccess() {
		return pExpNeg;
	}
	
	public ParserRule getExpNegRule() {
		return getExpNegAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false'
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
